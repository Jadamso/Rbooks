{
  "hash": "b8a5b83728a67ebc872e422ec0d6fd97",
  "result": {
    "engine": "knitr",
    "markdown": "\n# Misc. Topics\n***\n\n\n## Locally Linear Multiple Regression\n\n\n## Nonparametric Tests\n\n#### **Distributional Comparisons**. {-}\nWe can also examine whether there are any differences between the entire *distributions*\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sample Wage Data\nlibrary(wooldridge)\nx1 <- sort( wage1[wage1$educ == 15,  'wage'])  \nx2 <- sort( wage1[wage1$educ == 16,  'wage'] )\nx <- sort(c(x1, x2))\n\n# Compute Quantiles\nquants <- seq(0,1,length.out=101)\nQ1 <- quantile(x1, probs=quants)\nQ2 <- quantile(x2, probs=quants)\n\n# Compare Distributions via Quantiles\nrx <- range(c(x1, x2))\npar(mfrow=c(1,2))\nplot(rx, c(0,1), type='n', font.main=1,\n    main='Distributional Comparison',\n    xlab=expression(Q[s]),\n    ylab=expression(F[s]))\nlines(Q1, quants, col=2)\nlines(Q2, quants, col=4)\nlegend('bottomright', col=c(2,4), lty=1,\nlegend=c('F1', 'F2'))\n\n# Compare Quantiles\nplot(Q1, Q2, xlim=rx, ylim=rx,\n    main='Quantile-Quantile Plot', font.main=1,\npch=16, col=grey(0,.25))\nabline(a=0,b=1,lty=2)\n```\n\n::: {.cell-output-display}\n![](02_07_MiscTopics_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nThe starting point for hypothesis testing is the Kolmogorov-Smirnov Statistic: the maximum absolute difference between two CDF's over all sample data $x \\in \\{X_1\\} \\cup \\{X_2\\}$.\n\\begin{eqnarray}\nKS &=& \\max_{x} |F_{1}(x)- F_{2}(x)|^{p},\n\\end{eqnarray}\nwhere $p$ is an integer (typically 1).\n\nAn intuitive alternative is the Cramer-von Mises Statistic: the sum of absolute differences (raised to a power, typically 2) between two CDF's. \n\\begin{eqnarray}\nCVM=\\sum_{x} |F_{1}(x)- F_{2}(x)|^{p}.\n\\end{eqnarray}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Distributions\nF1 <- ecdf(x1)(x)\nF2 <- ecdf(x2)(x)\n\nlibrary(twosamples)\n\n# Kolmogorov-Smirnov\nKSq <- which.max(abs(F2 - F1))\nKSqv <- round(twosamples::ks_stat(x1, x2),2)\n\n# Cramer-von Mises Statistic (p=2)\nCVMqv <- round(twosamples::cvm_stat(x1, x2, power=2), 2) \n\n# Visualize Differences\nplot(range(x), c(0,1), type=\"n\", xlab='x', ylab='ECDF')\nlines(x, F1, col=2, lwd=2)\nlines(x, F2, col=4, lwd=2)\n# CVM\nsegments(x, F1, x, F2, lwd=.5, col=grey(0,.2))\n# KS\nsegments(x[KSq], F1[KSq], x[KSq], F2[KSq], lwd=1.5, col=grey(0,.75), lty=2)\n```\n\n::: {.cell-output-display}\n![](02_07_MiscTopics_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nJust as before, you use bootstrapping for hypothesis testing.\n\n::: {.cell}\n\n```{.r .cell-code}\ntwosamples::cvm_test(x1, x2)\n## Test Stat   P-Value \n##  2.084253  0.078000\n```\n:::\n\n\n#### **Comparing Multiple Groups**. {-}\nFor multiple groups, we can tests the equality of all distributions (whether at least one group is different). The *Kruskal-Wallis* test examines\n\\[\nH_0:\\; F_1 = F_2 = \\dots = F_G\n\\quad\\text{versus}\\quad\nH_A:\\; \\text{at least one } F_g \\text{ differs},\n\\]\nwhere $F_g$ is the continuous distribution of group $g$. This test does not tell us which group is different.\n\nTo conduct the test, first denote individuals $i=1,...n$ with overall ranks $r_1,....r_{n}$. Each individual belongs to group $g=1,...G$, and each group $g$ has $n_{g}$ individuals with average rank $\\overline{r}_{g} = \\sum_{i} r_{i} /n_{g}$. The Kruskal Wallis statistic is \n\\begin{eqnarray}\nKW &=& (N-1) \\frac{\\sum_{g=1}^{G} n_{g}( \\overline{r}_{g} - \\overline{r}  )^2  }{\\sum_{i=1}^{N} ( r_{i} - \\overline{r}  )^2}, \n\\end{eqnarray}\nwhere  $\\overline{r} = \\frac{N+1}{2}$ is the grand mean rank.\n\nIn the special case with only two groups, $G=2$, the Kruskal Wallis test reduces to the *Mannâ€“Whitney U-test* (also known as the \\textit{Wilcoxon rank-sum test}). In this case, we can write the hypotheses in terms of individual outcomes in each group, $Y_i$ in one group $Y_j$ in the other;\n\\[\nH_0: P(Y_i > Y_j)=P(Y_i > Y_i)\n\\quad\\text{versus}\\quad\nH_A: P(Y_i > Y_j) \\neq P(Y_i > Y_j) \n\\]\nThe corresponding test statistic is\n\\begin{eqnarray}\nU   &=& \\min(U_1,U_2) \\\\\nU_g &=& \\sum_{i\\in g}\\sum_{j\\in -g}\n           \\Bigl[\\mathbf 1(Y_i > Y_j) + \\tfrac12\\mathbf 1(Y_i = Y_j)\\Bigr].\n\\end{eqnarray}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(AER)\ndata(CASchools)\nCASchools$stratio <- CASchools$students/CASchools$teachers\n\n# Do student/teacher ratio differ for at least 1 county?\n# Single test of multiple distributions\nkruskal.test(CASchools$stratio, CASchools$county)\n## \n## \tKruskal-Wallis rank sum test\n## \n## data:  CASchools$stratio and CASchools$county\n## Kruskal-Wallis chi-squared = 161.18, df = 44, p-value = 2.831e-15\n\n# Multiple pairwise tests\n# pairwise.wilcox.test(CASchools$stratio, CASchools$county)\n```\n:::\n\n\n\n\n\n\n## Prediction\n\n#### **Prediction Intervals**. {-}\n\nIn addition to confidence intervals, we can also compute a *prediction interval* which estimate the variability of new data rather than a statistic\n\nIn this example, we consider a single variable and compute the frequency each value was covered.\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- runif(1000)\n# Middle 90% of values\nxq0 <- quantile(x, probs=c(.05,.95))\n\nbks <- seq(0,1,by=.01)\nhist(x, breaks=bks, border=NA,\n    main='Prediction Interval', font.main=1)\nabline(v=xq0)\n```\n\n::: {.cell-output-display}\n![](02_07_MiscTopics_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\npaste0('we are 90% confident that the a future data point will be between ', \n    round(xq0[1],2), ' and ', round(xq0[2],2) )\n## [1] \"we are 90% confident that the a future data point will be between 0.05 and 0.96\"\n```\n:::\n\nIn this example, we consider a range for $y_{i}(x)$ rather than for $m(x)$. These intervals also take into account the residuals --- the variability of individuals around the mean. \n\n::: {.cell}\n\n```{.r .cell-code}\n# Bivariate Data from USArrests\nxy <- USArrests[,c('Murder','UrbanPop')]\ncolnames(xy) <- c('y','x')\nxy0 <- xy[order(xy$x),]\n```\n:::\n\n\nFor a nice overview of different types of intervals, see https://www.jstor.org/stable/2685212. For an in-depth view, see \"Statistical Intervals: A Guide for Practitioners and Researchers\" or \"Statistical Tolerance Regions: Theory, Applications, and Computation\". See https://robjhyndman.com/hyndsight/intervals/ for constructing intervals for future observations in a time-series context. See Davison and Hinkley, chapters 5 and 6 (also Efron and Tibshirani, or Wehrens et al.)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# From \"Basic Regression\"\nxy0 <- xy[order(xy$x),]\nX0 <- unique(xy0$x)\nreg_lo <- loess(y~x, data=xy0, span=.8)\npreds_lo <- predict(reg_lo, newdata=data.frame(x=X0))\n\n\n# Jackknife CI\njack_lo <- sapply(1:nrow(xy), function(i){\n    xy_i <- xy[-i,]\n    reg_i <- loess(y~x, dat=xy_i, span=.8)\n    predict(reg_i, newdata=data.frame(x=X0))\n})\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nboot_regs <- lapply(1:399, function(b){\n    b_id <- sample( nrow(xy), replace=T)\n    xy_b <- xy[b_id,]\n    reg_b <- lm(y~x, dat=xy_b)\n})\n\nplot(y~x, pch=16, col=grey(0,.5),\n    dat=xy0, ylim=c(0, 20))\nlines(X0, preds_lo,\n    col=hcl.colors(3,alpha=.75)[2],\n    type='o', pch=2)\n\n# Estimate Residuals CI at design points\nres_lo <- sapply(1:nrow(xy), function(i){\n    y_i <- xy[i,'y']\n    preds_i <- jack_lo[,i]\n    resids_i <- y_i - preds_i\n})\nres_cb <- apply(res_lo, 1, quantile,\n    probs=c(.025,.975), na.rm=T)\n\n# Plot\nlines( X0, preds_lo +res_cb[1,],\n    col=hcl.colors(3,alpha=.75)[2], lt=2)\nlines( X0, preds_lo +res_cb[2,],\n    col=hcl.colors(3,alpha=.75)[2], lty=2)\n\n\n\n# Smooth estimates \nres_lo <- lapply(1:nrow(xy), function(i){\n    y_i <- xy[i,'y']\n    x_i <- xy[i,'x']\n    preds_i <- jack_lo[,i]\n    resids_i <- y_i - preds_i\n    cbind(e=resids_i, x=x_i)\n})\nres_lo <- as.data.frame(do.call(rbind, res_lo))\n\nres_fun <- function(x0, h, res_lo){\n    # Assign equal weight to observations within h distance to x0\n    # 0 weight for all other observations\n    ki <- dunif(res_lo$x, x0-h, x0+h) \n    ei <- res_lo[ki!=0,'e']\n    res_i <- quantile(ei, probs=c(.025,.975), na.rm=T)\n}\nres_lo2 <- sapply(X0, res_fun, h=15, res_lo=res_lo)\n\nlines( X0, preds_lo + res_lo2[1,],\n    col=hcl.colors(3,alpha=.75)[2], lty=1, lwd=2)\nlines( X0, preds_lo + res_lo2[2,],\n    col=hcl.colors(3,alpha=.75)[2], lty=1, lwd=2)\n```\n\n::: {.cell-output-display}\n![](02_07_MiscTopics_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bootstrap Prediction Interval\nboot_resids <- lapply(boot_regs, function(reg_b){\n    e_b <- resid(reg_b)\n    x_b <- reg_b$model$x\n    res_b <- cbind(e_b, x_b)\n})\nboot_resids <- as.data.frame(do.call(rbind, boot_resids))\n# Homoskedastic\nehat <- quantile(boot_resids$e_b, probs=c(.025, .975))\nx <- quantile(xy$x,probs=seq(0,1,by=.1))\nboot_pi <- coef(reg)[1] + x*coef(reg)['x']\nboot_pi <- cbind(boot_pi + ehat[1], boot_pi + ehat[2])\n\n# Plot Bootstrap PI\nplot(y~x, dat=xy, pch=16, main='Prediction Intervals',\n    ylim=c(-5,20), font.main=1)\npolygon( c(x, rev(x)), c(boot_pi[,1], rev(boot_pi[,2])),\n    col=grey(0,.2), border=NA)\n\n# Parametric PI (For Comparison)\n#pi <- predict(reg, interval='prediction', newdata=data.frame(x))\n#lines( x, pi[,'lwr'], lty=2)\n#lines( x, pi[,'upr'], lty=2)\n```\n:::\n\n\n#### **Forecasting and TSCV** {-}\n\n## Decision Theory\n\n#### **Statistical Power** {-}\n\n#### **Quality Control** {-}\n\n#### **Optimal Experiment Designs** {-}\n\n",
    "supporting": [
      "02_07_MiscTopics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}