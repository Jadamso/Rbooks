{
  "hash": "988ae2d521641c49a8ba706a3b64b67d",
  "result": {
    "engine": "knitr",
    "markdown": "\n# Bivariate Statistics\n***\n\nAll of the univariate statistics we have covered apply to marginal distributions. For joint distributions, there are several ways to statistically describe the relationship between two variables.  The major differences surround whether the data are cardinal or an ordered/unordered factor.\n\n## Statistics of Association\n\n#### **Cardinal**. {-}\n*Pearson (Linear) Correlation*.\nSuppose $X$ and $Y$ are both cardinal data. As such, you can compute the most famous measure of association, the covariance:\n$$\nC_{XY} =  \\sum_{i} [X_i - \\overline{X}] [Y_i - \\overline{Y}] / N\n$$\n\n::: {.cell}\n\n```{.r .cell-code}\nxy <- USArrests[,c('Murder','UrbanPop')]\n#plot(xy, pch=16, col=grey(0,.25))\ncov(xy)\n##             Murder   UrbanPop\n## Murder   18.970465   4.386204\n## UrbanPop  4.386204 209.518776\n```\n:::\n\nNote that $C_{XX}=V_{X}$.\nFor ease of interpretation and comparison, we rescale this statistic to always lay between $-1$ and $1$ \n$$\nr_{XY} = \\frac{ C_{XY} }{ \\sqrt{V_X} \\sqrt{V_Y}}\n$$\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(xy)[2]\n## [1] 0.06957262\n```\n:::\n\n\n*Falk Codeviance*.\nThe Codeviance is a robust alternative to Covariance. Instead of relying on means (which can be sensitive to outliers), it uses medians ($\\tilde{X}$) to capture the central tendency.^[See also *Theil-Sen Estimator*, which may be seen as a precursor.] We can also scale the Codeviance by the median absolute deviation to compute the median correlation.\n\\begin{eqnarray}\n\\text{CoDev}(X,Y) = \\text{Med}\\left\\{ |X_i - \\tilde{X}| |Y_i - \\tilde{Y}| \\right\\} \\\\\n\\tilde{r}_{XY} = \\frac{ \\text{CoDev}(X,Y) }{ \\text{MAD}(X) \\text{MAD}(Y) }.\n\\end{eqnarray}\n\n::: {.cell}\n\n```{.r .cell-code}\ncor_m <- function(xy) {\n  # Compute medians for each column\n  med <- apply(xy, 2, median)\n  # Subtract the medians from each column\n  xm <- sweep(xy, 2, med, \"-\")\n  # Compute CoDev\n  CoDev <- median(xm[, 1] * xm[, 2])\n  # Compute the medians of absolute deviation\n  MadProd <- prod( apply(abs(xm), 2, median) )\n  # Return the robust correlation measure\n  return( CoDev / MadProd)\n}\ncor_m(xy)\n## [1] 0.005707763\n```\n:::\n\n\n#### **Ordered Factor**. {-}\nSuppose $X$ and $Y$ are both *ordered* variables. *Kendall's Tau* measures the strength and direction of association by counting the number of concordant pairs (where the ranks agree) versus discordant pairs (where the ranks disagree). A value of $\\tau = 1$ implies perfect agreement in rankings, $\\tau = -1$ indicates perfect disagreement, and $\\tau = 0$ suggests no association in the ordering.\n$$\n\\tau = \\frac{2}{n(n-1)} \\sum_{i} \\sum_{j > i} \\text{sgn} \\Bigl( (X_i - X_j)(Y_i - Y_j) \\Bigr),\n$$\nwhere the sign function is:\n$$\n\\text{sgn}(z) = \n\\begin{cases}\n+1 & \\text{if } z > 0\\\\\n0  & \\text{if } z = 0 \\\\\n-1 & \\text{if} z < 0 \n\\end{cases}.\n$$\n\n::: {.cell}\n\n```{.r .cell-code}\nxy <- USArrests[,c('Murder','UrbanPop')]\nxy[,1] <- rank(xy[,1] )\nxy[,2] <- rank(xy[,2] )\n# plot(xy, pch=16, col=grey(0,.25))\ntau <- cor(xy[, 1], xy[, 2], method = \"kendall\")\nround(tau, 3)\n## [1] 0.074\n```\n:::\n\n\n#### **Unordered Factor**. {-}\nSuppose $X$ and $Y$ are both *categorical* variables; the value of $X$ is one of $1...r$ categories and the value of $Y$ is one of $1...k$ categories. *Cramer's V* quantifies the strength of association by adjusting a \"chi-squared\" statistic to provide a measure that ranges from $0$ to $1$; $0$ indicates no association while a value closer to $1$ signifies a strong association. \n\nFirst, consider a contingency table for $X$ and $Y$ with $r$ rows and $k$ columns. The chi-square statistic is then defined as:\n\n$$\n\\chi^2 = \\sum_{i=1}^{r} \\sum_{j=1}^{k} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}.\n$$\n\nwhere\n\n- $O_{ij}$ denote the observed frequency in cell $(i, j)$,\n- $E_{ij} = \\frac{R_i \\cdot C_j}{n}$ is the expected frequency for each cell if $X$ and $Y$ are independent\n- $R_i$ denote the total frequency for row $i$ (i.e., $R_i = \\sum_{j=1}^{k} O_{ij}$),\n- $C_j$ denote the total frequency for column $j$ (i.e., $C_j = \\sum_{i=1}^{r} O_{ij}$),\n- $n$ be the grand total of observations, so that $n = \\sum_{i=1}^{r} \\sum_{j=1}^{k} O_{ij}$.\n\n\nSecond, normalize the chi-square statistic with the sample size and the degrees of freedom to compute Cramer's V. \n\n$$\nV = \\sqrt{\\frac{\\chi^2 / n}{\\min(k - 1, \\, r - 1)}},\n$$\n\nwhere:\n\n- $n$ is the total sample size,\n- $k$ is the number of categories for one variable,\n- $r$ is the number of categories for the other variable.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxy <- USArrests[,c('Murder','UrbanPop')]\nxy[,1] <- cut(xy[,1],3)\nxy[,2] <- cut(xy[,2],4)\ntable(xy)\n##               UrbanPop\n## Murder         (31.9,46.8] (46.8,61.5] (61.5,76.2] (76.2,91.1]\n##   (0.783,6.33]           4           5           8           5\n##   (6.33,11.9]            0           4           7           6\n##   (11.9,17.4]            2           4           2           3\n\ncor_v <- function(xy){\n    # Create a contingency table from the categorical variables\n    tbl <- table(xy)\n    # Compute the chi-square statistic (without Yates' continuity correction)\n    chi2 <- chisq.test(tbl, correct=FALSE)[['statistic']]\n    # Total sample size\n    n <- sum(tbl)\n    # Compute the minimum degrees of freedom (min(rows-1, columns-1))\n    df_min <- min(nrow(tbl) - 1, ncol(tbl) - 1)\n    # Calculate Cramer's V\n    V <- sqrt((chi2 / n) / df_min)\n    return(V)\n}\ncor_v(xy)\n## X-squared \n## 0.2307071\n\n# DescTools::CramerV( table(xy) )\n```\n:::\n\n\n\n#### **Mixed**. {-}\n\nFor mixed data, where $Y_{i}$ is a cardinal variable and $X_{i}$ is an unordered factor variable, we analyze associations via group comparisons. The basic idea is seen in a comparison of two samples, which corresponds to an $X_{i}$ with two categories.\n\n\n## Two-Sample Differences\n\nSuppose we have 2 samples of data. \n\nEach $X_{is}$ is an individual observation $i$ from the sample $s=1,2$. (For example, the wages for men and women in Canada. For another example, homicide rates in two different American states.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(wooldridge)\nx1 <- wage1[wage1$educ == 15, 'wage']\nx2 <- wage1[wage1$educ == 16, 'wage']\n```\n:::\n\n\nFor simplicity, we will assume that each observation is an independent observation. We will further assume the data from each group are normally distributed, but the mean and variance can be different across groups.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sample 1 (e.g., males)\nn1 <- 100\nx1 <- rnorm(n1, 0, 2)\n# Sample 2 (e.g., females)\nn2 <- 80\nx2 <- rnorm(n2, 1, 1)\n\npar(mfrow=c(1,2))\nbks <- seq(-7,7, by=.5)\nhist(x1, border=NA, breaks=bks,\n    main='Sample 1', font.main=1)\n\nhist(x2, border=NA, breaks=bks, \n    main='Sample 2', font.main=1)\n```\n\n::: {.cell-output-display}\n![](01_11_BivariateStatistics_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nThere may be several differences between these samples. Often, the first summary statistic we investigate is the difference in means. \n\n#### **Equal Means**. {-}\nWe often want to know if the means of different sample are different in . To test this hypothesis, we compute the sample mean $\\overline{X}_{s}$ over all observations in each sample and then examine the differences term\n\\begin{eqnarray} \nD = \\overline{X}_{1} - \\overline{X}_{2},\n\\end{eqnarray}\nwith a null hypothesis of $D=0$.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Differences between means\nm1 <- mean(x1)\nm2 <- mean(x2)\nd <- m1-m2\n    \n# Bootstrap Distribution\nboot_d <- sapply(1:10^4, function(b){\n    x1_b <- sample(x1, replace=T)\n    x2_b <- sample(x2, replace=T)\n    m1_b <- mean(x1_b)\n    m2_b <- mean(x2_b)\n    d_b <- m1_b - m2_b\n    return(d_b)\n})\nhist(boot_d, border=NA, font.main=1,\n    main='Difference in Means')\n\n# 2-Sided Test\nboot_ci <- quantile(boot_d, probs=c(.025, .975))\nabline(v=boot_ci, lwd=2)\nabline(v=0, lwd=2, col=2)\n```\n\n::: {.cell-output-display}\n![](01_11_BivariateStatistics_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n::: {.cell}\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# p-value\n1 - ecdf(boot_d)(0)\n## [1] 0\n```\n:::\n\n\n\nJust as with one sample tests, we can compute a *standardized differences*, where $D$ is converted into a $t$ statistic.  Note, however, that we have to compute the standard error for the difference statistic, which is a bit more complicated. However, this allows us to easily conduct one or two sided hypothesis tests using a standard normal approximation.\n\n::: {.cell}\n\n```{.r .cell-code}\nse_hat <- sqrt(var(x1)/n1 + var(x2)/n2);\nt_obs <- d/se_hat\n```\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n#### **Other Differences**. {-}\nThe above procedure generalized from differences in \"means\" to other statistics like \"quantiles\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bootstrap Distribution Function\nboot_fun <- function( fun, B=10^4, ...){\n    boot_d <- sapply(1:B, function(b){\n        x1_b <- sample(x1, replace=T)\n        x2_b <- sample(x2, replace=T)\n        f1_b <- fun(x1_b, ...)\n        f2_b <- fun(x2_b, ...)\n        d_b <- f1_b - f2_b\n        return(d_b)\n    })\n    return(boot_d)\n}\n\n# 2-Sided Test for Median Differences\n# d <- median(x2) - median(x1)\nboot_d <- boot_fun(median)\nhist(boot_d, border=NA, font.main=1,\n    main='Difference in Medians')\nabline(v=quantile(boot_d, probs=c(.025, .975)), lwd=2)\nabline(v=0, lwd=2, col=2)\n```\n\n::: {.cell-output-display}\n![](01_11_BivariateStatistics_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n1 - ecdf(boot_d)(0)\n## [1] 0\n```\n:::\n\n\nNote that these estimates suffer from a finite-sample bias, which we can correct for. Also note that bootstrap tests can perform poorly with highly unequal variances or skewed data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2-Sided Test for SD Differences\n#d <- sd(x2) - sd(x1)\nboot_d <- boot_fun(sd)\nhist(boot_d, border=NA, font.main=1,\n    main='Difference in Standard Deviations')\nabline(v=quantile(boot_d, probs=c(.025, .975)), lwd=2)\nabline(v=0, lwd=2, col=2)\n1 - ecdf(boot_d)(0)\n\n\n# Try any function!\n# boot_fun( function(xs) { IQR(xs)/median(xs) } )\n```\n:::\n\n\n## Further Reading \n\nOther Statistics \n\n* <https://cran.r-project.org/web/packages/qualvar/vignettes/wilcox1973.html>\n\n\n",
    "supporting": [
      "01_11_BivariateStatistics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}