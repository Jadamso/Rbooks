{
  "hash": "5960434b367b8f599da468e93a5faa1a",
  "result": {
    "engine": "knitr",
    "markdown": "# Data Analysis\n***\n\n## Beyond Basics\n\nUse expansion \"packages\" for less common procedures and more functionality\n\n#### **CRAN**. {-}\nMost packages can be found on CRAN and can be easily installed\n\n::: {.cell}\n\n```{.r .cell-code}\n# commonly used packages\ninstall.packages(\"stargazer\")\ninstall.packages(\"data.table\")\ninstall.packages(\"plotly\")\n# other statistical packages\ninstall.packages(\"extraDistr\")\ninstall.packages(\"twosamples\")\n# install.packages(\"purrr\")\n# install.packages(\"reshape2\")\n```\n:::\n\n\nThe most common tasks also have [cheatsheets](https://www.rstudio.com/resources/cheatsheets/) you can use. \n\nFor example, to generate 'exotic' probability distributions\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(extraDistr)\n\npar(mfrow=c(1,2))\nfor(p in c(-.5,0)){\n    x <- rgev(2000, mu=0, sigma=1, xi=p)\n    hist(x, breaks=50, border=NA, main=NA, freq=F)\n}\ntitle('GEV densities', outer=T, line=-1)\n```\n\n::: {.cell-output-display}\n![](01_08_DataAnalysis_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(extraDistr)\n\npar(mfrow=c(1,3))\nfor(p in c(-1, 0,2)){\n    x <- rtlambda(2000, p)\n    hist(x, breaks=100, border=NA, main=NA, freq=F)\n}\ntitle('Tukey-Lambda densities', outer=T, line=-1)\n```\n\n::: {.cell-output-display}\n![](01_08_DataAnalysis_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n#### **Github**.  {-}\nSometimes you will want to install a package from GitHub. For this, you can use [devtools](https://devtools.r-lib.org/) or its light-weight version [remotes](https://remotes.r-lib.org/)\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"devtools\")\ninstall.packages(\"remotes\")\n```\n:::\n\n\nNote that to install `devtools`, you also need to have developer tools installed on your computer.\n\n* Windows: [Rtools](https://cran.r-project.org/bin/windows/Rtools/rtools42/rtools.html)\n* Mac: [Xcode](https://apps.apple.com/us/app/xcode/id497799835?mt=12)\n\nTo color terminal output on Linux systems, you can use the colorout package\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(remotes)\n# Install <https://github.com/jalvesaq/colorout\n# to .libPaths()[1]\ninstall_github('jalvesaq/colorout')\nlibrary(colorout)\n```\n:::\n\n\n#### **Base**. {-}\nWhile additional packages can make your code faster, they also create dependancies that can lead to problems. So learn base R well before becoming dependant on other packages\n\n* <https://bitsofanalytics.org/posts/base-vs-tidy/>\n* <https://jtr13.github.io/cc21fall2/comparison-among-base-r-tidyverse-and-datatable.html>\n\n\n#### **Updating**. {-}\n\nMake sure R and your packages are up to date. The current version of R and any packages used can be found (and recorded) with \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n:::\n\n\nTo update your R packages, use \n\n::: {.cell}\n\n```{.r .cell-code}\nupdate.packages()\n```\n:::\n\n\n#### **Rare Tricks**. {-}\nNote that after updating R, you can update *all* packages stored in *all* `.libPaths()` with the following command\n\n::: {.cell}\n\n```{.r .cell-code}\nupdate.packages(checkBuilt=T, ask=F)\n# install.packages(old.packages(checkBuilt=T)[,\"Package\"])\n```\n:::\n\n\nSometimes there is a problem. To find specific broken packages after an update\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(purrr)\n\nset_names(.libPaths()) %>%\n  map(function(lib) {\n    .packages(all.available = TRUE, lib.loc = lib) %>%\n        keep(function(pkg) {\n            f <- system.file('Meta', 'package.rds', package = pkg, lib.loc = lib)\n            tryCatch({readRDS(f); FALSE}, error = function(e) TRUE)\n        })\n  })\n# https://stackoverflow.com/questions/31935516/installing-r-packages-error-in-readrdsfile-error-reading-from-connection/55997765\n```\n:::\n\n\nTo remove packages duplicated in multiple libraries\n\n::: {.cell}\n\n```{.r .cell-code}\n# Libraries\ni <- installed.packages()\nlibs <- .libPaths()\n# Find Duplicated Packages\ni1 <- i[ i[,'LibPath']==libs[1], ]\ni2 <- i[ i[,'LibPath']==libs[2], ]\ndups <- i2[,'Package'] %in% i1[,'Package']\nall( dups )\n# Remove\nremove.packages(  i2[,'Package'], libs[2] )\n```\n:::\n\n\n\n## Inputs\n\n#### **Reading Data**. {-}\n\nThe first step in data analysis is getting data into R. There are many ways to do this, depending on your data structure. Perhaps the most common case is reading in a csv file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in csv (downloaded from online)\n# download source 'http://www.stern.nyu.edu/~wgreene/Text/Edition7/TableF19-3.csv'\n# download destination '~/TableF19-3.csv'\nread.csv('~/TableF19-3.csv')\n \n# Can read in csv (directly from online)\n# dat_csv <- read.csv('http://www.stern.nyu.edu/~wgreene/Text/Edition7/TableF19-3.csv')\n```\n:::\n\n\nReading in other types of data can require the use of \"packages\". For example, the \"wooldridge\" package contains datasets on crime. To use this data, we must first install the package on our computer. Then, to access the data, we must first load the package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install R Data Package and Load in\ninstall.packages('wooldridge') # only once\nlibrary(wooldridge) # anytime you want to use the data\n\ndata('crime2') \ndata('crime4')\n```\n:::\n\n\nWe can use packages to access many different types of data. To read in a Stata data file, for example, we can use the \"haven\" package.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read in stata data file from online\n#library(haven)\n#dat_stata <- read_dta('https://www.ssc.wisc.edu/~bhansen/econometrics/DS2004.dta')\n#dat_stata <- as.data.frame(dat_stata)\n\n# For More Introductory Econometrics Data, see \n# https://www.ssc.wisc.edu/~bhansen/econometrics/Econometrics%20Data.zip\n# https://pages.stern.nyu.edu/~wgreene/Text/Edition7/tablelist8new.htm\n# R packages: wooldridge, causaldata, Ecdat, AER, ....\n```\n:::\n\n\n#### **Cleaning Data**. {-}\n\nData transformation is often necessary before analysis, so remember to be careful and check your code is doing what you want. (If you have large datasets, you can always test out the code on a sample.)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function to Create Sample Datasets\nmake_noisy_data <- function(n, b=0){\n    # Simple Data Generating Process\n    x <- seq(1,10, length.out=n) \n    e <- rnorm(n, mean=0, sd=10)\n    y <- b*x + e \n    # Obervations\n    xy_mat <- data.frame(ID=seq(x), x=x, y=y)\n    return(xy_mat)\n}\n\n# Two simulated datasets\ndat1 <- make_noisy_data(6)\ndat2 <- make_noisy_data(6)\n\n# Merging data in long format\ndat_merged_long <- rbind(\n    cbind(dat1,DF=1),\n    cbind(dat2,DF=2))\n```\n:::\n\n\nNow suppose we want to transform into wide format\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merging data in wide format, First Attempt\ndat_merged_wide <- cbind( dat1, dat2)\nnames(dat_merged_wide) <- c(paste0(names(dat1),'.1'), paste0(names(dat2),'.2'))\n\n# Merging data in wide format, Second Attempt\n# higher performance\ndat_merged_wide2 <- merge(dat1, dat2,\n    by='ID', suffixes=c('.1','.2'))\n## CHECK they are the same.\nidentical(dat_merged_wide, dat_merged_wide2)\n## [1] FALSE\n# Inspect any differences\n\n# Merging data in wide format, Third Attempt with dedicated package\n# (highest performance but with new type of object)\nlibrary(data.table)\ndat_merged_longDT <- as.data.table(dat_merged_long)\ndat_melted <- melt(dat_merged_longDT, id.vars=c('ID', 'DF'))\ndat_merged_wide3 <- dcast(dat_melted, ID~DF+variable)\n\n## CHECK they are the same.\nidentical(dat_merged_wide, dat_merged_wide3)\n## [1] FALSE\n```\n:::\n\n\nOften, however, we ultimately want data in long format\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merging data in long format, Second Attempt with dedicated package \ndat_melted2 <- melt(dat_merged_wide3, measure=c(\"1_x\",\"1_y\",\"2_x\",\"2_y\"))\nmelt_vars <- strsplit(as.character(dat_melted2[['variable']]),'_')\ndat_melted2[,'DF'] <- sapply(melt_vars, `[[`,1)\ndat_melted2[,'variable'] <- sapply(melt_vars, `[[`,2)\ndat_merged_long2 <- dcast(dat_melted2, DF+ID~variable)\ndat_merged_long2 <- as.data.frame(dat_merged_long2)\n\n## CHECK they are the same.\nidentical( dat_merged_long2, dat_merged_long)\n## [1] FALSE\n\n# Further Inspect\ndat_merged_long2 <- dat_merged_long2[,c('ID','x','y','DF')]\nmapply( identical, dat_merged_long2, dat_merged_long)\n##    ID     x     y    DF \n##  TRUE  TRUE  TRUE FALSE\n```\n:::\n\n\nFor more tips, see <https://raw.githubusercontent.com/rstudio/cheatsheets/main/data-import.pdf> and <https://cran.r-project.org/web/packages/data.table/vignettes/datatable-reshape.html>\n<!--\\url{https://github.com/rstudio/cheatsheets/raw/master/data-transformation.pdf}-->\n\n\n## Outputs\n\n#### **Polishing**.{-}\n\nYour first figures are typically standard.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Random Data\nx <- seq(1, 10, by=.0002)\ne <- rnorm(length(x), mean=0, sd=1)\ny <- .25*x + e \n\n# First Drafts\n# qqplot(x, y)\n# plot(x, y)\n```\n:::\n\n\nEdit your plot to focus on the most useful information. For others to easily comprehend your work, you must also polish the plot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Second Draft: Focus\n# (In this example: comparing shapes)\nxs <- scale(x)\nys <- scale(y)\n# qqplot(xs, ys)\n\n# Third Draft: Polish\nqqplot(ys, xs, \n    xlab=expression('['~X-bar(X)~'] /'~s[X]),\n    ylab=expression('['~Y-bar(Y)~'] /'~s[Y]),\n    pch=16, cex=.5, col=grey(0,.2))\nabline(a=0, b=1, lty=2)\n```\n\n::: {.cell-output-display}\n![](01_08_DataAnalysis_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nWhen polishing, you must do two things\n\n* Add details that are necessary to understand the figure\n* Remove unnecessary details (see e.g., <https://www.edwardtufte.com/notebook/chartjunk/> and <https://www.biostat.wisc.edu/~kbroman/topten_worstgraphs/>)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Another Example\nxy_dat <- data.frame(x=x, y=y)\npar(fig=c(0,1,0,0.9), new=F)\nplot(y~x, xy_dat, pch=16, col=rgb(0,0,0,.05), cex=.5,\n    xlab='', ylab='') # Format Axis Labels Seperately\nmtext( 'y=0.25 x + e\\n e ~ standard-normal', 2, line=2.2)\nmtext( expression(x%in%~'[0,10]'), 1, line=2.2)\n#abline( lm(y~x, data=xy_dat), lty=2)\ntitle('Plot with good features, but too excessive in several ways',\n    adj=0, font.main=1)\n\n# Outer Legend (https://stackoverflow.com/questions/3932038/)\nouter_legend <- function(...) {\n  opar <- par(fig=c(0, 1, 0, 1), oma=c(0, 0, 0, 0), \n    mar=c(0, 0, 0, 0), new=TRUE)\n  on.exit(par(opar))\n  plot(0, 0, type='n', bty='n', xaxt='n', yaxt='n')\n  legend(...)\n}\nouter_legend('topright', legend='single data point',\n    title='do you see the normal distribution?',\n    pch=16, col=rgb(0,0,0,.1), cex=1, bty='n')\n```\n\n::: {.cell-output-display}\n![](01_08_DataAnalysis_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nFor useful tips, see C. Wilke (2019) \"Fundamentals of Data Visualization: A Primer on Making Informative and\nCompelling Figures\" <https://clauswilke.com/dataviz/>\n\n#### **Saving**. {-}\nYou can export figures with specific dimensions\n\n::: {.cell}\n\n```{.r .cell-code}\npdf( 'Figures/plot_example.pdf', height=5, width=5)\n# plot goes here\ndev.off()\n```\n:::\n\nFor plotting math, see\n<https://astrostatistics.psu.edu/su07/R/html/grDevices/html/plotmath.html> and \n<https://library.virginia.edu/data/articles/mathematical-annotation-in-r>\n\nFor exporting options, see `?pdf`.\nFor saving other types of files, see `png(\"*.png\")`, `tiff(\"*.tiff\")`, and  `jpeg(\"*.jpg\")`\n\n\nWhich features are most informative depends on what you want to show, and you can always mix and match. Learn to edit your figures:\n\n* <https://websites.umich.edu/~jpboyd/eng403_chap2_tuftegospel.pdf>\n* <https://jtr13.github.io/cc19/tuftes-principles-of-data-ink.html>\n* <https://github.com/cxli233/FriendsDontLetFriends>\n\nand be aware that each type has benefits and costs. E.g., see\n\n* <https://www.data-to-viz.com/caveats.html>\n* <https://x.com/EdwardTufte/status/1092717905156993024/photo/1>\n* <https://towardsdatascience.com/why-a-box-plot-should-not-be-used-alone-and-some-plots-to-use-it-with-23381f7e3cb6/>\n\nFor small datasets, you can plot individual data points with a strip chart.\nFor datasets with spatial information, a map is also helpful.\nSometime tables are better than graphs (see <https://www.edwardtufte.com/notebook/boxplots-data-test>)\n\n\n\n#### **Interactive Figures**. {-}\n\nNotably, [histograms](https://plotly.com/r/histograms/) and [boxplots](https://plotly.com/r/box-plots/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npop_mean <- mean(USArrests[,'UrbanPop'])\npop_cut <- USArrests[,'UrbanPop'] < pop_mean\nmurder_lowpop <- USArrests[ pop_cut,'Murder']\nmurder_highpop <- USArrests[ !pop_cut,'Murder']\n\nlibrary(plotly)\nfig <- plot_ly(alpha=0.6, \n    hovertemplate=\"%{y}\")\nfig <- fig %>% add_histogram(murder_lowpop, name='Low Pop. (< Mean)')\nfig <- fig %>% add_histogram(murder_highpop, name='High Pop (>= Mean)')\nfig <- fig %>% layout(barmode=\"stack\") # barmode=\"overlay\"\nfig <- fig %>% layout(\n    title=\"Crime and Urbanization in America 1975\",\n    xaxis = list(title='Murders Arrests per 100,000 People'),\n    yaxis = list(title='Number of States'),\n    legend=list(title=list(text='<b> % Urban Pop. </b>'))\n)\nfig\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-e126a74ac0c47cb7a9c0\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e126a74ac0c47cb7a9c0\">{\"x\":{\"visdat\":{\"8a916026368e\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"8a916026368e\",\"attrs\":{\"8a916026368e\":{\"hovertemplate\":\"%{y}\",\"alpha\":0.59999999999999998,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":[13.199999999999999,10,8.8000000000000007,17.399999999999999,2.6000000000000001,7.2000000000000002,2.2000000000000002,9.6999999999999993,2.1000000000000001,16.100000000000001,6,4.2999999999999998,2.1000000000000001,13,0.80000000000000004,14.4,3.7999999999999998,13.199999999999999,2.2000000000000002,8.5,5.7000000000000002,6.7999999999999998],\"type\":\"histogram\",\"name\":\"Low Pop. (< Mean)\",\"inherit\":true},\"8a916026368e.1\":{\"hovertemplate\":\"%{y}\",\"alpha\":0.59999999999999998,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"x\":[8.0999999999999996,9,7.9000000000000004,3.2999999999999998,5.9000000000000004,15.4,5.2999999999999998,10.4,6,15.4,11.300000000000001,4.4000000000000004,12.1,2.7000000000000002,9,12.199999999999999,7.4000000000000004,11.4,11.1,7.2999999999999998,6.5999999999999996,4.9000000000000004,6.2999999999999998,3.3999999999999999,12.699999999999999,3.2000000000000002,4,2.6000000000000001],\"type\":\"histogram\",\"name\":\"High Pop (>= Mean)\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"barmode\":\"stack\",\"title\":\"Crime and Urbanization in America 1975\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Murders Arrests per 100,000 People\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Number of States\"},\"legend\":{\"title\":{\"text\":\"<b> % Urban Pop. <\\/b>\"}},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"hovertemplate\":[\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\"],\"x\":[13.199999999999999,10,8.8000000000000007,17.399999999999999,2.6000000000000001,7.2000000000000002,2.2000000000000002,9.6999999999999993,2.1000000000000001,16.100000000000001,6,4.2999999999999998,2.1000000000000001,13,0.80000000000000004,14.4,3.7999999999999998,13.199999999999999,2.2000000000000002,8.5,5.7000000000000002,6.7999999999999998],\"type\":\"histogram\",\"name\":\"Low Pop. (< Mean)\",\"marker\":{\"color\":\"rgba(31,119,180,0.6)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,0.6)\"},\"error_x\":{\"color\":\"rgba(31,119,180,0.6)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"hovertemplate\":[\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\",\"%{y}\"],\"x\":[8.0999999999999996,9,7.9000000000000004,3.2999999999999998,5.9000000000000004,15.4,5.2999999999999998,10.4,6,15.4,11.300000000000001,4.4000000000000004,12.1,2.7000000000000002,9,12.199999999999999,7.4000000000000004,11.4,11.1,7.2999999999999998,6.5999999999999996,4.9000000000000004,6.2999999999999998,3.3999999999999999,12.699999999999999,3.2000000000000002,4,2.6000000000000001],\"type\":\"histogram\",\"name\":\"High Pop (>= Mean)\",\"marker\":{\"color\":\"rgba(255,127,14,0.6)\",\"line\":{\"color\":\"rgba(255,127,14,1)\"}},\"error_y\":{\"color\":\"rgba(255,127,14,0.6)\"},\"error_x\":{\"color\":\"rgba(255,127,14,0.6)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nUSArrests[,'ID'] <- rownames(USArrests)\nfig <- plot_ly(USArrests,\n    y=~Murder, color=~cut(UrbanPop,4),\n    alpha=0.6, type=\"box\",\n    pointpos=0, boxpoints = 'all',\n    hoverinfo='text',    \n    text = ~paste('<b>', ID, '</b>',\n        \"<br>Urban  :\", UrbanPop,\n        \"<br>Assault:\", Assault,\n        \"<br>Murder :\", Murder))    \nfig <- layout(fig,\n    showlegend=FALSE,\n    title='Crime and Urbanization in America 1975',\n    xaxis = list(title = 'Percent of People in an Urban Area'),\n    yaxis = list(title = 'Murders Arrests per 100,000 People'))\nfig\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-30ddfa710bd2d22e2b39\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-30ddfa710bd2d22e2b39\">{\"x\":{\"visdat\":{\"8a912d7c72bd\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"8a912d7c72bd\",\"attrs\":{\"8a912d7c72bd\":{\"y\":{},\"pointpos\":0,\"boxpoints\":\"all\",\"hoverinfo\":\"text\",\"text\":{},\"color\":{},\"alpha\":0.59999999999999998,\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"box\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"showlegend\":false,\"title\":\"Crime and Urbanization in America 1975\",\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Percent of People in an Urban Area\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Murders Arrests per 100,000 People\"},\"hovermode\":\"closest\"},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"fillcolor\":\"rgba(102,194,165,0.6)\",\"y\":[16.100000000000001,13,0.80000000000000004,3.7999999999999998,2.2000000000000002,5.7000000000000002],\"pointpos\":0,\"boxpoints\":\"all\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"<b> Mississippi <\\/b> <br>Urban  : 44 <br>Assault: 259 <br>Murder : 16.1\",\"<b> North Carolina <\\/b> <br>Urban  : 45 <br>Assault: 337 <br>Murder : 13\",\"<b> North Dakota <\\/b> <br>Urban  : 44 <br>Assault: 45 <br>Murder : 0.8\",\"<b> South Dakota <\\/b> <br>Urban  : 45 <br>Assault: 86 <br>Murder : 3.8\",\"<b> Vermont <\\/b> <br>Urban  : 32 <br>Assault: 48 <br>Murder : 2.2\",\"<b> West Virginia <\\/b> <br>Urban  : 39 <br>Assault: 81 <br>Murder : 5.7\"],\"type\":\"box\",\"name\":\"(31.9,46.8]\",\"marker\":{\"color\":\"rgba(102,194,165,0.6)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"line\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"fillcolor\":\"rgba(252,141,98,0.6)\",\"y\":[13.199999999999999,10,8.8000000000000007,17.399999999999999,2.6000000000000001,2.2000000000000002,9.6999999999999993,2.1000000000000001,6,2.1000000000000001,14.4,13.199999999999999,6.7999999999999998],\"pointpos\":0,\"boxpoints\":\"all\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"<b> Alabama <\\/b> <br>Urban  : 58 <br>Assault: 236 <br>Murder : 13.2\",\"<b> Alaska <\\/b> <br>Urban  : 48 <br>Assault: 263 <br>Murder : 10\",\"<b> Arkansas <\\/b> <br>Urban  : 50 <br>Assault: 190 <br>Murder : 8.8\",\"<b> Georgia <\\/b> <br>Urban  : 60 <br>Assault: 211 <br>Murder : 17.4\",\"<b> Idaho <\\/b> <br>Urban  : 54 <br>Assault: 120 <br>Murder : 2.6\",\"<b> Iowa <\\/b> <br>Urban  : 57 <br>Assault: 56 <br>Murder : 2.2\",\"<b> Kentucky <\\/b> <br>Urban  : 52 <br>Assault: 109 <br>Murder : 9.7\",\"<b> Maine <\\/b> <br>Urban  : 51 <br>Assault: 83 <br>Murder : 2.1\",\"<b> Montana <\\/b> <br>Urban  : 53 <br>Assault: 109 <br>Murder : 6\",\"<b> New Hampshire <\\/b> <br>Urban  : 56 <br>Assault: 57 <br>Murder : 2.1\",\"<b> South Carolina <\\/b> <br>Urban  : 48 <br>Assault: 279 <br>Murder : 14.4\",\"<b> Tennessee <\\/b> <br>Urban  : 59 <br>Assault: 188 <br>Murder : 13.2\",\"<b> Wyoming <\\/b> <br>Urban  : 60 <br>Assault: 161 <br>Murder : 6.8\"],\"type\":\"box\",\"name\":\"(46.8,61.5]\",\"marker\":{\"color\":\"rgba(252,141,98,0.6)\",\"line\":{\"color\":\"rgba(252,141,98,1)\"}},\"line\":{\"color\":\"rgba(252,141,98,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"fillcolor\":\"rgba(141,160,203,0.6)\",\"y\":[5.9000000000000004,7.2000000000000002,6,15.4,11.300000000000001,12.1,2.7000000000000002,9,4.2999999999999998,11.4,7.2999999999999998,6.5999999999999996,4.9000000000000004,6.2999999999999998,8.5,4,2.6000000000000001],\"pointpos\":0,\"boxpoints\":\"all\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"<b> Delaware <\\/b> <br>Urban  : 72 <br>Assault: 238 <br>Murder : 5.9\",\"<b> Indiana <\\/b> <br>Urban  : 65 <br>Assault: 113 <br>Murder : 7.2\",\"<b> Kansas <\\/b> <br>Urban  : 66 <br>Assault: 115 <br>Murder : 6\",\"<b> Louisiana <\\/b> <br>Urban  : 66 <br>Assault: 249 <br>Murder : 15.4\",\"<b> Maryland <\\/b> <br>Urban  : 67 <br>Assault: 300 <br>Murder : 11.3\",\"<b> Michigan <\\/b> <br>Urban  : 74 <br>Assault: 255 <br>Murder : 12.1\",\"<b> Minnesota <\\/b> <br>Urban  : 66 <br>Assault: 72 <br>Murder : 2.7\",\"<b> Missouri <\\/b> <br>Urban  : 70 <br>Assault: 178 <br>Murder : 9\",\"<b> Nebraska <\\/b> <br>Urban  : 62 <br>Assault: 102 <br>Murder : 4.3\",\"<b> New Mexico <\\/b> <br>Urban  : 70 <br>Assault: 285 <br>Murder : 11.4\",\"<b> Ohio <\\/b> <br>Urban  : 75 <br>Assault: 120 <br>Murder : 7.3\",\"<b> Oklahoma <\\/b> <br>Urban  : 68 <br>Assault: 151 <br>Murder : 6.6\",\"<b> Oregon <\\/b> <br>Urban  : 67 <br>Assault: 159 <br>Murder : 4.9\",\"<b> Pennsylvania <\\/b> <br>Urban  : 72 <br>Assault: 106 <br>Murder : 6.3\",\"<b> Virginia <\\/b> <br>Urban  : 63 <br>Assault: 156 <br>Murder : 8.5\",\"<b> Washington <\\/b> <br>Urban  : 73 <br>Assault: 145 <br>Murder : 4\",\"<b> Wisconsin <\\/b> <br>Urban  : 66 <br>Assault: 53 <br>Murder : 2.6\"],\"type\":\"box\",\"name\":\"(61.5,76.2]\",\"marker\":{\"color\":\"rgba(141,160,203,0.6)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"line\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"fillcolor\":\"rgba(231,138,195,0.6)\",\"y\":[8.0999999999999996,9,7.9000000000000004,3.2999999999999998,15.4,5.2999999999999998,10.4,4.4000000000000004,12.199999999999999,7.4000000000000004,11.1,3.3999999999999999,12.699999999999999,3.2000000000000002],\"pointpos\":0,\"boxpoints\":\"all\",\"hoverinfo\":[\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\",\"text\"],\"text\":[\"<b> Arizona <\\/b> <br>Urban  : 80 <br>Assault: 294 <br>Murder : 8.1\",\"<b> California <\\/b> <br>Urban  : 91 <br>Assault: 276 <br>Murder : 9\",\"<b> Colorado <\\/b> <br>Urban  : 78 <br>Assault: 204 <br>Murder : 7.9\",\"<b> Connecticut <\\/b> <br>Urban  : 77 <br>Assault: 110 <br>Murder : 3.3\",\"<b> Florida <\\/b> <br>Urban  : 80 <br>Assault: 335 <br>Murder : 15.4\",\"<b> Hawaii <\\/b> <br>Urban  : 83 <br>Assault: 46 <br>Murder : 5.3\",\"<b> Illinois <\\/b> <br>Urban  : 83 <br>Assault: 249 <br>Murder : 10.4\",\"<b> Massachusetts <\\/b> <br>Urban  : 85 <br>Assault: 149 <br>Murder : 4.4\",\"<b> Nevada <\\/b> <br>Urban  : 81 <br>Assault: 252 <br>Murder : 12.2\",\"<b> New Jersey <\\/b> <br>Urban  : 89 <br>Assault: 159 <br>Murder : 7.4\",\"<b> New York <\\/b> <br>Urban  : 86 <br>Assault: 254 <br>Murder : 11.1\",\"<b> Rhode Island <\\/b> <br>Urban  : 87 <br>Assault: 174 <br>Murder : 3.4\",\"<b> Texas <\\/b> <br>Urban  : 80 <br>Assault: 201 <br>Murder : 12.7\",\"<b> Utah <\\/b> <br>Urban  : 80 <br>Assault: 120 <br>Murder : 3.2\"],\"type\":\"box\",\"name\":\"(76.2,91.1]\",\"marker\":{\"color\":\"rgba(231,138,195,0.6)\",\"line\":{\"color\":\"rgba(231,138,195,1)\"}},\"line\":{\"color\":\"rgba(231,138,195,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n#### **Tables**. {-}\n\nYou can also export tables in a variety of formats, for other software programs to easily read \n\n```{.r .cell-code}\nlibrary(stargazer)\n# summary statistics\nstargazer(USArrests,\n    type='html', \n    summary=T,\n    title='Summary Statistics for USArrests')\n```\n\n\n<table style=\"text-align:center\"><caption><strong>Summary Statistics for USArrests</strong></caption>\n<tr><td colspan=\"6\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">Statistic</td><td>N</td><td>Mean</td><td>St. Dev.</td><td>Min</td><td>Max</td></tr>\n<tr><td colspan=\"6\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">Murder</td><td>50</td><td>7.788</td><td>4.356</td><td>0.800</td><td>17.400</td></tr>\n<tr><td style=\"text-align:left\">Assault</td><td>50</td><td>170.760</td><td>83.338</td><td>45</td><td>337</td></tr>\n<tr><td style=\"text-align:left\">UrbanPop</td><td>50</td><td>65.540</td><td>14.475</td><td>32</td><td>91</td></tr>\n<tr><td style=\"text-align:left\">Rape</td><td>50</td><td>21.232</td><td>9.366</td><td>7.300</td><td>46.000</td></tr>\n<tr><td colspan=\"6\" style=\"border-bottom: 1px solid black\"></td></tr></table>\n\nYou can create a basic interactive table to explore raw data.\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"USArrests\")\nlibrary(reactable)\nreactable(USArrests, filterable=T, highlight=T)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-1bc893e9562a9b0ff9c5\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1bc893e9562a9b0ff9c5\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\".rownames\":[\"Alabama\",\"Alaska\",\"Arizona\",\"Arkansas\",\"California\",\"Colorado\",\"Connecticut\",\"Delaware\",\"Florida\",\"Georgia\",\"Hawaii\",\"Idaho\",\"Illinois\",\"Indiana\",\"Iowa\",\"Kansas\",\"Kentucky\",\"Louisiana\",\"Maine\",\"Maryland\",\"Massachusetts\",\"Michigan\",\"Minnesota\",\"Mississippi\",\"Missouri\",\"Montana\",\"Nebraska\",\"Nevada\",\"New Hampshire\",\"New Jersey\",\"New Mexico\",\"New York\",\"North Carolina\",\"North Dakota\",\"Ohio\",\"Oklahoma\",\"Oregon\",\"Pennsylvania\",\"Rhode Island\",\"South Carolina\",\"South Dakota\",\"Tennessee\",\"Texas\",\"Utah\",\"Vermont\",\"Virginia\",\"Washington\",\"West Virginia\",\"Wisconsin\",\"Wyoming\"],\"Murder\":[13.2,10,8.1,8.8,9,7.9,3.3,5.9,15.4,17.4,5.3,2.6,10.4,7.2,2.2,6,9.7,15.4,2.1,11.3,4.4,12.1,2.7,16.1,9,6,4.3,12.2,2.1,7.4,11.4,11.1,13,0.8,7.3,6.6,4.9,6.3,3.4,14.4,3.8,13.2,12.7,3.2,2.2,8.5,4,5.7,2.6,6.8],\"Assault\":[236,263,294,190,276,204,110,238,335,211,46,120,249,113,56,115,109,249,83,300,149,255,72,259,178,109,102,252,57,159,285,254,337,45,120,151,159,106,174,279,86,188,201,120,48,156,145,81,53,161],\"UrbanPop\":[58,48,80,50,91,78,77,72,80,60,83,54,83,65,57,66,52,66,51,67,85,74,66,44,70,53,62,81,56,89,70,86,45,44,75,68,67,72,87,48,45,59,80,80,32,63,73,39,66,60],\"Rape\":[21.2,44.5,31,19.5,40.6,38.7,11.1,15.8,31.9,25.8,20.2,14.2,24,21,11.3,18,16.3,22.2,7.8,27.8,16.3,35.1,14.9,17.1,28.2,16.4,16.5,46,9.5,18.8,32.1,26.1,16.1,7.3,21.4,20,29.3,14.9,8.3,22.5,12.8,26.9,25.5,22.9,11.2,20.7,26.2,9.3,10.8,15.6]},\"columns\":[{\"id\":\".rownames\",\"name\":\"\",\"type\":\"character\",\"sortable\":false,\"filterable\":false,\"rowHeader\":true},{\"id\":\"Murder\",\"name\":\"Murder\",\"type\":\"numeric\"},{\"id\":\"Assault\",\"name\":\"Assault\",\"type\":\"numeric\"},{\"id\":\"UrbanPop\",\"name\":\"UrbanPop\",\"type\":\"numeric\"},{\"id\":\"Rape\",\"name\":\"Rape\",\"type\":\"numeric\"}],\"filterable\":true,\"highlight\":true,\"dataKey\":\"c49af85e0b2038b0b71caf77db2bacb3\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\nFor further data exploration, your plots can also be made [interactive](https://r-graph-gallery.com/interactive-charts.html) via <https://plotly.com/r/>. For more details, see [examples](https://plotly-r.com/) and then [applications](https://bookdown.org/paulcbauer/applied-data-visualization/10-plotly.html).\n\n::: {.cell}\n\n```{.r .cell-code}\n#install.packages(\"plotly\")\nlibrary(plotly)\n```\n:::\n\n\n\n#### **Custom Figures**. {-}\n\nMany of the best plots are custom made (see <https://www.r-graph-gallery.com/>). Here are some ones that I have made over the years.\n\n<!-- ## CONVERT IMAGES\nfor pdfile in *.pdf ; do \nconvert -verbose -density 500  \"${pdfile}\" \"${pdfile%.*}\".png;\ndone\n-->\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](./Figures_Manual/Vegetation.png){width=2400}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](./Figures_Manual/Balances_Trial.png){width=3000}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](./Figures_Manual/PopulationDensity2.png){width=3000}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](./Figures_Manual/SampleExample.png){width=1750}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](./Figures_Manual/SemiInclusive_Example.png){width=3000}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](./Figures_Manual/Stability_3.png){width=1000}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](./Figures_Manual/EvolutionaryDynamics.png){width=3000}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](./Figures_Manual/Experiment_Timeline.png){width=1750}\n:::\n:::\n\n\n\n\n## R-Markdown Reports\n\nWe will use R Markdown for communicating results to each other. Note that R and R Markdown are both languages. R studio interprets R code make statistical computations and interprets R Markdown code to produce pretty documents that contain both writing and statistics. Altogether, your project will use\n\n* R: does statistical computations\n* R Markdown: formats statistical computations for sharing\n* Rstudio: graphical user interface that allows you to easily use both R and R Markdown.\n\nHomework reports are probably the smallest document you can create. These little reports are almost entirely self-contained (showing both code and output). To make them, you will need to \n\nFirst install [Pandoc](http://pandoc.org) on your computer.\n\nThen install any required packages\n\n::: {.cell}\n\n```{.r .cell-code}\n# Packages for Rmarkdown\ninstall.packages(\"knitr\")\ninstall.packages(\"rmarkdown\")\n\n# Other packages frequently used\n#install.packages(\"plotly\") #for interactive plots\n#install.packages(\"sf\") #for spatial data\n```\n:::\n\n\n\nWe will create simple reproducible reports via R Markdown.\n\n#### **Example 1: Data Scientism**. {-}\n<!-- \n**Clean workspace**.\nDelete any temporary files which you do not want (or start a fresh session).\n\n(for example *summarytable_example.txt* and *plot_example.pdf* and section *Data analysis examples: custom figures*)\n-->\n\n\nSee [DataScientism.html](https://jadamso.github.io/Rbooks/Templates/DataScientism.html) and then create it by\n\n* Clicking the \"Code\" button in the top right and then \"Download Rmd\"\n* Open with Rstudio\n* Change the name and title *to your own*, make other edits\n* Then point-and-click \"knit\"\n\nAlternatively,\n\n* Download the source file from [DataScientism.Rmd](https://jadamso.github.io/Rbooks/Templates/DataScientism.Rmd)\n* Change the name and title *to your own*, make other edits\n* Use the console to run\n\n::: {.cell}\n\n```{.r .cell-code}\nrmarkdown::render('DataScientism.Rmd')\n```\n:::\n\n\n#### **Example 2: Homework Assignment**.  {-}\nBelow is a template of what homework questions (and answers) look like. Create a new *.Rmd* file from scratch and produce a *.html* file that looks similar to this:\n\n*Problem:*\nSimulate 100 random observations of the form $y=x\\beta+\\epsilon$ and plot the relationship. Plot and explore the data interactively via plotly, <https://plotly.com/r/line-and-scatter/>. Then play around with different styles, <https://www.r-graph-gallery.com/13-scatter-plot.html>, to best express your point.\n\n*Solution:*\nI simulate $400$ observations for $\\epsilon \\sim 2\\times N(0,1)$ and $\\beta=4$, as seen in this single chunk. Notice an upward trend.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simulation\nn <- 100\nE <- rnorm(n)\nX <- seq(n)\nY <- 4*X + 2*E\n# Plot\nlibrary(plotly)\ndat <- data.frame(X=X,Y=Y)\nplot_ly( data=dat, x=~X, y=~Y)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-85286f54425cf798acdc\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-85286f54425cf798acdc\">{\"x\":{\"visdat\":{\"8a911a8b58d1\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"8a911a8b58d1\",\"attrs\":{\"8a911a8b58d1\":{\"x\":{},\"y\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20]}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"X\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"Y\"},\"hovermode\":\"closest\",\"showlegend\":false},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],\"y\":[5.8000279508180999,7.3761628110362478,12.230653335579818,14.852984804425457,18.715810135161504,19.231698607433394,27.684939513377842,34.420364876573203,36.572147253201479,41.328607705992248,46.023450730888314,46.354806397408353,47.757466976259543,53.684353532297948,62.119462067700681,63.596209642805782,66.536606123501443,69.280406570084708,76.294166173793101,82.766296515670547,82.859887150174842,86.689550341020478,88.417878753454346,95.946887096338656,103.21594514444887,107.02286279669099,108.60436627418075,113.63511811639319,113.4217701293496,119.94010176466024,123.88348078168933,127.98024801432585,136.05505825671193,132.60165535140669,142.17395444908931,143.48290379188569,142.34588335583626,151.52777049476535,157.37979229410183,160.19914718428754,163.00312126368829,170.46637116014244,172.92268170002217,178.60529128851041,182.57951187318289,184.62417398156572,186.94047816707146,192.52080872219148,199.63958545061931,200.94131511848229,207.78974501086148,209.45004883498589,209.25710416251511,216.28593367858088,218.20797394730894,226.38275542161611,227.21792140896022,231.65841180411002,236.66428276629946,241.0512387914099,241.94931538462953,247.5558428250975,249.83778498103382,256.39368029056732,258.81713227615575,263.27797207514061,265.60436077436759,273.20773291090944,275.99515942616034,282.62848513485937,280.96170061823472,291.46058540242097,293.71304384365283,298.83958032835852,301.68412392970691,303.670404290909,309.67661484428515,314.00476829798993,316.4677270183318,320.79328497161288,321.24098296564785,329.32463131461941,332.70130256841156,338.34740480498152,343.34561887684168,344.54794615924254,350.17947650828347,353.0588182561375,355.17989940786072,357.7035336054289,362.75091346727027,366.96328720926908,373.11829302031174,373.20044508170992,380.74478848274498,380.19110160119328,389.69308235684923,392.08083314373192,396.58010118396447,397.78081872661556],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"color\":\"rgba(31,119,180,1)\",\"line\":{\"color\":\"rgba(31,119,180,1)\"}},\"error_y\":{\"color\":\"rgba(31,119,180,1)\"},\"error_x\":{\"color\":\"rgba(31,119,180,1)\"},\"line\":{\"color\":\"rgba(31,119,180,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\n\n# To Do:\n# 1. Fit a regression line\n# 2. Color points by their residual value\n```\n:::\n\n\n\n<!---\n*Question 2:*\nVerify the definition of a line segment for points $A=(0,3), B=(1,5)$ using a $101 \\times 101$ grid. Recall a line segment is all points $s$ that have $d(s, A) + d(s, B) = d(A, B)$.\n\n*Answer* \n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\ns_1 <- c(0,3)\ns_2 <- c(1,5)\nSeg1 <- st_linestring( rbind(s_1,s_2) )\ngrid_pts <- expand.grid(\n    x=seq(s_1[1],s_2[1], length.out=101),\n    y=seq(s_1[2],s_2[2], length.out=101)\n)\n\nSeg1_dist <- dist( Seg1 )\ngrid_pts[,'dist'] <- apply(grid_pts, 1, function(s){\n    dist( rbind(s,s_1) ) + dist( rbind(s,s_2) ) })\ngrid_pts[,'seg'] <- grid_pts[,'dist']  == Seg1_dist\n\nD_point_seg <- st_multipoint( as.matrix(grid_pts[grid_pts[,'seg']==T,1:2]) ) \nD_point_notseg <- st_multipoint( as.matrix(grid_pts[grid_pts[,'seg']==F,1:2]) ) \n\nplot(Seg1)\npoints(D_point_notseg, col=2, pch='.')\npoints(D_point_seg, pch=16)\nbox()\n```\n:::\n\n--->\n\n\n## Further Reading\n\nFor more guidance on how to create Rmarkdown documents, see\n\n* <https://github.com/rstudio/cheatsheets/blob/main/rmarkdown.pdf>\n* <https://cran.r-project.org/web/packages/rmarkdown/vignettes/rmarkdown.html>\n* <http://rmarkdown.rstudio.com>\n* <https://bookdown.org/yihui/rmarkdown/>\n* <https://bookdown.org/yihui/rmarkdown-cookbook/>\n* <https://dept.stat.lsa.umich.edu/~jerrick/courses/stat701/notes/rmarkdown.html>\n* An Introduction to the Advanced Theory and Practice of Nonparametric Econometrics. Raccine 2019. Appendices B \\& D.\n* <https://rmd4sci.njtierney.com/using-rmarkdown.html>\n* <https://alexd106.github.io/intro2R/Rmarkdown_intro.html>\n\nIf you are still lost, try one of the many online tutorials (such as these)\n\n* <https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf>\n* <https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet>\n* <https://www.neonscience.org/resources/learning-hub/tutorials/rmd-code-intro>\n* <https://m-clark.github.io/Introduction-to-Rmarkdown/>\n* <https://www.stat.cmu.edu/~cshalizi/rmarkdown/>\n* <http://math.wsu.edu/faculty/xchen/stat412/HwWriteUp.Rmd>\n* <http://math.wsu.edu/faculty/xchen/stat412/HwWriteUp.html>\n* <https://holtzy.github.io/Pimp-my-rmd/>\n* <https://ntaback.github.io/UofT_STA130/Rmarkdownforclassreports.html>\n* <https://crd150.github.io/hw_guidelines.html>\n* <https://r4ds.had.co.nz/r-markdown.html>\n* <http://www.stat.cmu.edu/~cshalizi/rmarkdown>\n* <http://www.ssc.wisc.edu/sscc/pubs/RFR/RFR_RMarkdown.html>\n* <http://kbroman.org/knitr_knutshell/pages/Rmarkdown.html>\n\n\n\n",
    "supporting": [
      "01_08_DataAnalysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.11.0/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.2/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.2/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n<script src=\"site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"site_libs/react-18.2.0/react.min.js\"></script>\n<script src=\"site_libs/react-18.2.0/react-dom.min.js\"></script>\n<script src=\"site_libs/reactwidget-2.0.0/react-tools.js\"></script>\n<link href=\"site_libs/reactable-0.4.4/reactable.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/reactable-binding-0.4.4/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}