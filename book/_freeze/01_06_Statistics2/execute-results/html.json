{
  "hash": "192f6847818129fd7978449502e03086",
  "result": {
    "engine": "knitr",
    "markdown": "\n# Statistics II\n***\n\nThere are *many* other statistics. Some help describe additional aspects of a dataset and others have different theoretical properties.\n\n\n## Center/Spread Statistics\n\nA general rule of applied statistics is that there are multiple ways to measure something. Mean and Variance are measurements of Center and Spread, but there are others that have different theoretical properties and may be better suited for your dataset.\n\n#### **Medians and Absolute Deviations**. {-}\nWe can use the *Median* as a \"robust alternative\" to means that is especially useful for data with skew and kurtosis (defined below). Recall that the $q$th quantile is the value where $q$ percent of the data are below and ($1-q$) percent are above. The median ($q=.5$) is the point where half of the data is lower values and the other half is higher. This means that median is not sensitive to extreme values (whereas the mean is).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX <- rgeom(50, .4)\nX\n##  [1]  2  0  1  0  3  1  0  1  3  0  0  0  0  1  1  6  0  0  4  1  1  0  4  1 10\n## [26]  0  0  0  0  0  1  1  0  1  3  1  1  0  1  1  3  3  0  0  1  2  3  0  2  2\n\nproportions <- table(X)/length(X)\nplot(proportions, ylab='proportion')\n```\n\n::: {.cell-output-display}\n![](01_06_Statistics2_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n:::{.callout-note icon=false collapse=\"true\"}\nExamine robustness to an extreme value\n\n::: {.cell}\n\n```{.r .cell-code}\n# measures of central tendency\nmean(X)\n## [1] 1.32\nquantile(X, prob=0.5)\n## 50% \n##   1\n\n#robustness\nX_extreme <- c(X, 1000)\nmean( X_extreme )\n## [1] 20.90196\nquantile(X_extreme, prob=0.5)\n## 50% \n##   1\n```\n:::\n\n:::\n\n:::{.callout-tip icon=false collapse=\"true\"}\nJust like weighted means, we can also compute weighted quantiles\n\n::: {.cell}\n\n```{.r .cell-code}\nweighted.quantile <- function(x, w, probs){\n    #See spatstat.univar::weighted.quantile\n    oo <- order(x)\n    x <- x[oo]\n    w <- w[oo]\n    Fx <- cumsum(w)/sum(w)\n    quantile_id <- max(which(Fx <= probs))+1\n    xq <- x[quantile_id] \n    return(xq)\n    \n}\n\n## Unweighted\nquantile(X, probs=.5)\n## 50% \n##   1\nweights <- rep(1, length(X))\nweighted.quantile(x=X, w=weights, probs=.5)\n## [1] 1\n\n## Weighted\nweights <- seq(X)\nweights <- weights/sum(weights) # normalize\nweighted.quantile(x=X, w=weights, probs=.5)\n## [1] 1\n```\n:::\n\n:::\n\nWe can also use the *Interquartile Range* or *Median Absolute Deviation* as an alternative to variance. The first and third quartiles ($q=.25$ and $q=.75$) together measure is the middle 50 percent of the data. The size of that range (interquartile range: the difference between the quartiles) represents \"spread\" or \"dispersion\" of the data. The median absolute deviation also measures spread\n\\begin{eqnarray}\n\\tilde{X} &=& Med(X_{i}) \\\\\nMAD_{X} &=& Med\\left( | X_{i} - \\tilde{X} | \\right).\n\\end{eqnarray}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#An alternative to sd(X)\nmad(X, constant=1) # median( abs(X - median(X)) )\n## [1] 1\n\n# Another alternative, used in the boxplot\nIQR(X) # diff( quantile(x, probs=c(.25,.75)))\n## [1] 2\n```\n:::\n\n\n:::{.callout-note icon=false collapse=\"true\"}\nExamine robustness to an extreme value\n\n::: {.cell}\n\n```{.r .cell-code}\nX_extreme <- c(X, 1000)\n\nmad(X, constant=1)\n## [1] 1\nsd(X)\n## [1] 1.845458\n\nmad(X_extreme, constant=1)\n## [1] 1\nsd(X_extreme)\n## [1] 139.8551\n```\n:::\n\n:::\n\n\nNote that there other \"absolute deviation\" statistics\n\n::: {.cell}\n\n```{.r .cell-code}\n# sometimes seen elsewhere\nmean( abs(X - mean(X)) )\nmean( abs(X - median(X)) )\nmedian( abs(X - mean(X)) )\n```\n:::\n\n\n#### **Mode and Share Concentration**. {-}\nSometimes, none of the above work well. With categorical data, for example, distributions are easier to describe with other statistics. The mode is the most common observation: the value with the highest observed frequency. We can also measure the spread of the frequencies or concentration at the mode vs elsewhere.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Draw 3 Random Letters\nK <- length(LETTERS)\nX_id <- rmultinom(3, 1, prob=rep(1/K,K))\nX_id\n##       [,1] [,2] [,3]\n##  [1,]    0    0    0\n##  [2,]    0    0    0\n##  [3,]    0    0    0\n##  [4,]    0    0    0\n##  [5,]    0    0    0\n##  [6,]    0    0    0\n##  [7,]    0    0    0\n##  [8,]    0    0    0\n##  [9,]    0    0    0\n## [10,]    0    0    0\n## [11,]    0    0    0\n## [12,]    0    0    0\n## [13,]    0    0    0\n## [14,]    0    0    0\n## [15,]    0    0    1\n## [16,]    0    0    0\n## [17,]    0    1    0\n## [18,]    0    0    0\n## [19,]    0    0    0\n## [20,]    0    0    0\n## [21,]    1    0    0\n## [22,]    0    0    0\n## [23,]    0    0    0\n## [24,]    0    0    0\n## [25,]    0    0    0\n## [26,]    0    0    0\n\n# Draw Random Letters 100 Times\nX_id <- rowSums(rmultinom(100, 1, prob=rep(1/K,K)))\nX <- lapply(1:K, function(k){\n    rep(LETTERS[k], X_id[k])\n})\nX <- factor(unlist(X), levels=LETTERS)\n\nproportions <- table(X)/length(X)\nplot(proportions)\n```\n\n::: {.cell-output-display}\n![](01_06_Statistics2_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\n# mode(s)\nnames(proportions)[proportions==max(proportions)]\n## [1] \"F\"\n\n# freq. spreads\nsd(proportions)\n## [1] 0.02221573\nsum(proportions^2)\n## [1] 0.0508\n# freq. concentration at mode\nmax(proportions)/mean(proportions)\n## [1] 2.6\n```\n:::\n\n\n## Shape Statistics\n\nCentral tendency and dispersion are often insufficient to describe a distribution. To further describe shape, we can compute the \"standard moments\" skew and kurtosis, as well as other statistics.\n\n\n#### **Skewness**. {-}\nThis captures how symmetric the distribution is.\n$$W_{X} =\\frac{\\sum_{i=1}^{N} [X_{i} - \\bar{X}]^3 / N}{ [s_{X}]^3 }$$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX <- rweibull(1000, shape=1)\nhist(X, border=NA, main=NA, freq=F, breaks=20)\n```\n\n::: {.cell-output-display}\n![](01_06_Statistics2_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\nskewness <-  function(X){\n X_bar <- mean(X)\n m3 <- mean((X - X_bar)^3)\n s3 <- sd(X)^3\n skew <- m3/s3\n return(skew)\n}\n\nskewness( rweibull(1000, shape=1))\n## [1] 1.910734\nskewness( rweibull(1000, shape=10) )\n## [1] -0.5825582\n```\n:::\n\n\n#### **Kurtosis**. {-}\nThis captures how many \"outliers\" there are.\n$$K_{X} =\\frac{\\sum_{i=1}^{N} [X_{i} - \\bar{X}]^4 / N}{ [s_{X}]^4 }.$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX <- rweibull(1000, shape=1)\nboxplot(X, main=NA)\n```\n\n::: {.cell-output-display}\n![](01_06_Statistics2_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\nkurtosis <- function(X){  \n X_bar <- mean(X)\n m4 <- mean((X - X_bar)^4) \n s4 <- sd(X)^4\n kurt <- m4/s4 - 3\n return(kurt)\n}\n\nkurtosis( rweibull(1000, shape=1) )\n## [1] 4.41057\nkurtosis( rweibull(1000, shape=10) )\n## [1] 0.02431636\n```\n:::\n\n\n#### **Clusters/Gaps**. {-}\nYou can also describe distributions in terms of how clustered the values are, including the number of modes and many other statistics. But remember that \"a picture is worth a thousand words\".\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Number of Modes\nX <- rbeta(1000, .6, .6)\nhist(X, border=NA, main=NA, freq=F, breaks=20)\n```\n\n::: {.cell-output-display}\n![](01_06_Statistics2_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Random Number Generator \nr_ugly1 <- function(n, theta1=c(-8,-1), theta2=c(-2,2), rho=.25){\n    omega   <- rbinom(n, size=1, rho)\n    epsilon <- omega * runif(n, theta1[1], theta2[1]) +\n        (1-omega) * rnorm(n, theta1[2], theta2[2])\n    return(epsilon)\n}\n# Large Sample\npar(mfrow=c(1,1))\nx <- seq(-12,6,by=.001)\nrX <- r_ugly1(1000000)\nhist(rX, breaks=1000,  freq=F, border=NA,\n    xlab=\"x\", main='')\n```\n\n::: {.cell-output-display}\n![](01_06_Statistics2_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Show True Density\nd_ugly1 <- function(x, theta1=c(-8,-1), theta2=c(-2,2), rho=.25){\n    rho     * dunif(x, theta1[1], theta2[1]) +\n    (1-rho) * dnorm(x, theta1[2], theta2[2]) }\ndx <- d_ugly1(x)\nlines(x, dx, col=1)\n```\n:::\n\n\n\n## Further Reading\n\n\n",
    "supporting": [
      "01_06_Statistics2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}